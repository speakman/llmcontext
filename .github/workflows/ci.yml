name: CI

on:
  push:
    branches: [main, master]
  pull_request:
    branches: [main, master]

permissions:
  contents: read

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 30
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5
      
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'
      
      - name: Install dependencies and package
        run: |
          python -m pip install --upgrade pip
          python -m pip install -e .[test]
          python -m pip install pipx
      
      - name: Test pipx installation
        if: ${{ !startsWith(matrix.python-version, '3.8') && !startsWith(matrix.python-version, '3.9') }}
        run: |
          pipx install . --python $(which python)
          echo "$HOME/.local/bin" >> $GITHUB_PATH
      
      - name: Verify CLI installation (pipx)
        if: ${{ !startsWith(matrix.python-version, '3.8') && !startsWith(matrix.python-version, '3.9') }}
        run: |
          llmcontext --version
          llmcontext --help
      
      - name: Test direct Python execution (older versions)
        if: ${{ startsWith(matrix.python-version, '3.8') || startsWith(matrix.python-version, '3.9') }}
        run: |
          python -m llmcontext --version
          python -m llmcontext --help
      
      - name: Run tests
        run: |
          pytest -v --tb=short
      
      - name: Test CLI functionality (pipx)
        if: ${{ !startsWith(matrix.python-version, '3.8') && !startsWith(matrix.python-version, '3.9') }}
        run: |
          # Test basic functionality
          llmcontext . /tmp/test_output.txt
          [ -f /tmp/test_output.txt ] && echo "Output file created successfully"
          
          # Test verbose mode
          llmcontext -v . > /dev/null 2>&1
          echo "Verbose mode test completed"
      
      - name: Test CLI functionality (direct Python)
        if: ${{ startsWith(matrix.python-version, '3.8') || startsWith(matrix.python-version, '3.9') }}
        run: |
          # Test basic functionality
          python -m llmcontext . /tmp/test_output.txt
          [ -f /tmp/test_output.txt ] && echo "Output file created successfully"
          
          # Test verbose mode
          python -m llmcontext -v . > /dev/null 2>&1
          echo "Verbose mode test completed"
